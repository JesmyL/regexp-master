interface _GlobalScopedNamedRegExpMakerGeneratedTypes extends
  Record<`/(?<str>\\w+)/`, { $0: string; str: string;  }>,
  Record<`/(?<str>\\w?)/`, { $0: string; str: string;  }>,
  Record<`/(?<str>a?)/`, { $0: string; str: string;  }>,
  Record<`/(?<val>text)/`, { $0: string; val: 'text';  }>,
  Record<`/(?<val>text \\d+/`, { $0: string; val: `text ${number}${string}`;  }>,
  Record<`/(?<val>text \\d*/`, { $0: string; val: `text ${number | ''}${string}`;  }>,
  Record<`/(?<val>text \\d?/`, { $0: string; val: `text ${number | ''}${string}`;  }>,
  Record<`/(?<val>text{1,3}/`, { $0: string; val: `text${string}`;  }>,
  Record<`/(?<val>text{0,3}/`, { $0: string; val: `tex${string}`;  }>,
  Record<`/(?<val>text{0,}/`, { $0: string; val: `text${string}`;  }>,
  Record<`/(?<val>text{,3}/`, { $0: string; val: `tex${string}`;  }>,
  Record<`/(?<num>\\d)/`, { $0: string; num: `${number}`;  }>,
  Record<`/(?<num>\\d{1,3})/`, { $0: string; num: `${number}`;  }>,
  Record<`/(?<num>\\d{,3})/`, { $0: string; num: `${number | ''}`;  }>,
  Record<`/(?<num>\\d{0,3})/`, { $0: string; num: `${number | ''}`;  }>,
  Record<`/(?<num>\\d{0,})/`, { $0: string; num: `${number | ''}`;  }>,
  Record<`/(?<num>\\d*)/`, { $0: string; num: `${number | ''}`;  }>,
  Record<`/(?<num>\\d?)/`, { $0: string; num: `${number | ''}`;  }>,
  Record<`/(?<numStr>\\d+[amn]+)\\s\\n*/`, { $0: string; numStr: `${number}${string}`;  }>,
  Record<`/(?<numStr>\\d{1,3}[amn]+)\\s\\n*/`, { $0: string; numStr: `${number}${string}`;  }>,
  Record<`/(?<numStr>\\d{1,}[amn]+)\\s\\n*/`, { $0: string; numStr: `${number}${string}`;  }>,
  Record<`/(?<numStr>\\d{0,3}[amn]+)\\s\\n*/`, { $0: string; numStr: `${number | ''}${string}`;  }>,
  Record<`/(?<numStr>\\d{,3}[amn]+)\\s\\n*/`, { $0: string; numStr: `${number | ''}${string}`;  }>,
  Record<`/(?<numStr>\\d?[amn]+)\\s\\n*/`, { $0: string; numStr: `${number | ''}${string}`;  }>,
  Record<`/(?<numStr>\\d*[amn]+)\\s\\n*/`, { $0: string; numStr: `${number | ''}${string}`;  }>,
  Record<`/(?<conNum>text \\d\\n*/`, { $0: string; conNum: `text ${number}${string}`;  }>,
  Record<`/(?<conNum>text \\d)/`, { $0: string; conNum: `text ${number}`;  }>,
  Record<`/(?<num>text \\d{2,3})/`, { $0: string; num: `text ${number}`;  }>,
  Record<`/(?<num>text \\d{1,})/`, { $0: string; num: `text ${number}`;  }>,
  Record<`/(?<num>text \\d{0,3})/`, { $0: string; num: `text ${number | ''}`;  }>,
  Record<`/(?<num>text \\d{0,})/`, { $0: string; num: `text ${number | ''}`;  }>,
  Record<`/(?<num>text \\d{,3})/`, { $0: string; num: `text ${number | ''}`;  }>,
  Record<`/(?<conNum>text [1-3])/`, { $0: string; conNum: `text ${number}`;  }>,
  Record<`/(?<conNum>text [1-3]+)/`, { $0: string; conNum: `text ${number}`;  }>,
  Record<`/(?<num>text [1-3]{1,3})/`, { $0: string; num: `text ${number}`;  }>,
  Record<`/(?<num>text [1-3]{1,})/`, { $0: string; num: `text ${number}`;  }>,
  Record<`/(?<num>text [1-3]{0,3})/`, { $0: string; num: `text ${number | ''}`;  }>,
  Record<`/(?<num>text [1-3]{,3})/`, { $0: string; num: `text ${number | ''}`;  }>,
  Record<`/(?<conNum>text [1-3]?)/`, { $0: string; conNum: `text ${number | ''}`;  }>,
  Record<`/(?<conNum>text [1-3]*)/`, { $0: string; conNum: `text ${number | ''}`;  }>,
  Record<`/(?<num>[1-3]+)?/`, { $0: string; num?: `${number}`; }>,
  Record<`/(?<num>[1-3]+)?(?<bum>aa)/`, { $0: string; bum: 'aa'; num?: `${number}`; }>
{ '': ''; }
